const __default = "// @ts-check\nimport { homedir } from \"node:os\"\nimport { createHash } from \"node:crypto\"\n\n/**\n * @typedef {object} LaunchConfig\n * @property {string} commandSeparator\n * @property {number} othersCommandsToShow\n * @property {RegExp} envRegexp\n * @property {number} checkVersionTimeoutInMs\n */\n\n/** @type {Partial<LaunchConfig>} */\nexport const config = {\n  commandSeparator: \"&&\",\n  othersCommandsToShow: 3,\n  checkVersionTimeoutInMs: 1000,\n}\n\n/**\n * @typedef {{ path: string }} Context\n * @typedef {(c: Context) => string} Builder\n * @typedef {string | Builder} CmdArg\n * @typedef {string | Builder} Cmd\n * @typedef {Cmd[] | { args: string[], cmd: Cmd[] }} BuiltCmd\n * @typedef {{ args: string[] }} CmdBuilderContext\n * @typedef {(_: CmdBuilderContext) => BuiltCmd } CmdBuilder\n * @typedef {{ dir?: string, cmd: Cmd[] | CmdBuilder, desc?: string }} Script\n * @typedef {{ [_: string]: Script }} Scripts\n * @typedef {(_0: TemplateStringsArray, ..._1: CmdArg[]) => Builder} CommandGenerator\n * @type {(_: { cmd: CommandGenerator }) => Scripts}\n*/\nexport default ({ cmd }) => ({\n  hello: {\n    cmd: [ \"echo Hello world!\" ],\n    desc: \"Print Hello world!\"\n  },\n  helloFn: {\n    dir: homedir() || \"\",\n    cmd: [\n      \"echo Hello world from\",\n      cmd`echo ${({ path }) => path}`\n    ],\n    desc: \"Print Hello world with home directory\"\n  },\n  describeArgs: {\n    cmd: ({ args }) => [\n      `echo \"count: ${args.length}\"`,\n      ...args.map((arg, i) => `echo \"${i + 1}. ${arg}\"`),\n      'echo input: '\n    ],\n    desc: \"Describes the arguments of command\"\n  },\n  cryptoArgs: {\n    cmd({ args }) {\n      const input = args.join(\"-\")\n      const algorithm = \"sha256\"\n      const resultArgs = createHash(algorithm)\n        .update(input)\n        .digest(\"hex\")\n        .toString()\n\n      return {\n        args: [resultArgs],\n        cmd: [\n          `echo \"hash algorithm: ${algorithm}\"`,\n          `echo \"input: ${input || \"<empty>\"}\"`,\n          \"echo result:\" // will print resultArgs\n        ]\n      }\n    },\n    desc: \"Prints a hash of the arguments joined with '-'\"\n  }\n})\n";
export { __default as default };
